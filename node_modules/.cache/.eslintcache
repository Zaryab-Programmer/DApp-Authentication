[{"/home/zaryab/VSCodeProjects/dapp-authentication/src/index.js":"1","/home/zaryab/VSCodeProjects/dapp-authentication/src/App.js":"2","/home/zaryab/VSCodeProjects/dapp-authentication/src/reportWebVitals.js":"3","/home/zaryab/VSCodeProjects/dapp-authentication/src/Button.js":"4"},{"size":500,"mtime":1628660803964,"results":"5","hashOfConfig":"6"},{"size":4369,"mtime":1628675731611,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1628660803964,"results":"8","hashOfConfig":"6"},{"size":814,"mtime":1628675352551,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1syovg8",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/zaryab/VSCodeProjects/dapp-authentication/src/index.js",[],["20","21"],"/home/zaryab/VSCodeProjects/dapp-authentication/src/App.js",["22"],"import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Button } from \"./Button\";\nimport Web3 from \"web3\";\nimport contract from \"./build/contracts/Auth.json\";\nclass App extends Component {\n\n  async componentWillMount() {\n    console.log(\"componentWillMount\");\n    await this.loadWeb3();\n    this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    console.log(\"loadWeb3\");\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n      window.location.href =\n        \"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn\";\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      name: \"\",\n      password: \"\",\n      address: \"\",\n      cnic: \"\",\n      balance: \"\",\n    };\n  }\n\n  async loadBlockchainData() {\n    console.log(\"loadBlockchainData\");\n    const web3 = window.web3;\n    const webeProvider = new Web3(\n      Web3.givenProvider || \"http://localhost:7545\"\n    );\n    const accounts = await webeProvider.eth.getAccounts();\n\n    this.setState({ address: accounts[0] });\n\n    const blnce = web3.utils.fromWei(\n      await web3.eth.getBalance(accounts[0]),\n      \"ether\"\n    );\n\n    this.setState({ balance: blnce });\n\n    console.log(this.state.balance);\n    console.log(this.state.address);\n  }\n\n\n  // handleSubmit = event => {\n  //   event.preventDefault()\n  //   console.log(event.target.firstName.value); //get value from input with name of firstName\n  // };\n\n\n   userRegistration = async (event) => {\n    event.preventDefault();\n    \n    const web3 = window.web3;\n\n    const webeProvider = new Web3(\n      Web3.givenProvider || \"http://localhost:7545\"\n    );\n    const accounts = await webeProvider.eth.getAccounts();\n    this.setState({ address: accounts[0] });\n    console.log(\"Account: \" + this.state.address);\n\n    const netId = await web3.eth.net.getId();\n    const deployedNetwork = contract.networks[netId];\n\n    console.log(deployedNetwork.address);\n\n    console.log(this.state.name);\n    console.log(this.state.address);\n    console.log(this.state.password);\n    console.log(this.state.balance);\n    console.log(this.state.cnic);\n\n    const userAuth = new web3.eth.Contract(\n      contract.abi,\n      deployedNetwork.address\n    );\n\n    await userAuth.methods\n      .register(\n        this.state.address,\n        this.state.name,\n        this.state.password,\n        this.state.balance,\n        this.state.cnic\n      )\n      .send({ from: this.state.account });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form>\n          <input\n            className=\"footer-input\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n          <input\n            className=\"footer-input\"\n            name=\"cnic\"\n            type=\"number\"\n            placeholder=\"CNIC\"\n            value={this.state.cnic}\n            onChange={this.handleChange}\n          />\n          <input\n            className=\"footer-input\"\n            name=\"password\"\n            type=\"text\"\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <Button onClick={this.userRegistration}>Register User</Button>\n        </form>\n\n        <div>\n          {/* <form>\n            <input\n              className=\"footer-input\"\n              name=\"cnic\"\n              type=\"number\"\n              placeholder=\"CNIC\"\n              value={this.state.cnic}\n              onChange={this.handleChange}\n            />\n            <input\n              className=\"footer-input\"\n              name=\"password\"\n              type=\"text\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n            <button>Login User</button>\n          </form> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/zaryab/VSCodeProjects/dapp-authentication/src/reportWebVitals.js",[],"/home/zaryab/VSCodeProjects/dapp-authentication/src/Button.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":2,"column":8,"nodeType":"29","messageId":"30","endLine":2,"endColumn":12},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]