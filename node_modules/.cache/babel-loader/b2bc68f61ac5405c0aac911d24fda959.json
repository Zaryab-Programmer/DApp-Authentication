{"ast":null,"code":"var _jsxFileName = \"/home/zaryab/VSCodeProjects/dapp-authentication/src/App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Button } from \"./Button\";\nimport Web3 from \"web3\";\nimport contract from \"./build/contracts/Auth.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  async componentWillMount() {\n    console.log(\"componentWillMount\");\n    await this.loadWeb3();\n    this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    console.log(\"loadWeb3\");\n\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n      window.location.href = \"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn\";\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.logoutSubmit = async event => {\n      event.preventDefault();\n      const web3 = window.web3;\n      const webeProvider = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n      const accounts = await webeProvider.eth.getAccounts();\n      this.setState({\n        address: accounts[0]\n      });\n      console.log(\"Account: \" + this.state.address);\n      const netId = await web3.eth.net.getId();\n      const deployedNetwork = contract.networks[netId];\n      const userAuth = new web3.eth.Contract(contract.abi, deployedNetwork.address);\n      await userAuth.methods.logout(this.state.address).send({\n        from: this.state.address\n      });\n    };\n\n    this.checkIsUserLogged = async event => {\n      event.preventDefault();\n      const web3 = window.web3;\n      const webeProvider = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n      const accounts = await webeProvider.eth.getAccounts();\n      this.setState({\n        address: accounts[0]\n      });\n      console.log(\"Account: \" + this.state.address);\n      const netId = await web3.eth.net.getId();\n      const deployedNetwork = contract.networks[netId];\n      const userAuth = new web3.eth.Contract(contract.abi, deployedNetwork.address);\n      const checkIsUser = await userAuth.methods.checkIsUserLogged(this.state.address).call({\n        from: this.state.address\n      });\n      console.log(\"checkIsUser : \" + checkIsUser);\n    };\n\n    this.checkBalance = async event => {\n      event.preventDefault();\n      const web3 = window.web3;\n      const webeProvider = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n      const accounts = await webeProvider.eth.getAccounts();\n      this.setState({\n        address: accounts[0]\n      });\n      console.log(\"Account: \" + this.state.address);\n      const netId = await web3.eth.net.getId();\n      const deployedNetwork = contract.networks[netId];\n      console.log(\"Deployed Address :\", deployedNetwork.address);\n      const userAuth = new web3.eth.Contract(contract.abi, deployedNetwork.address);\n      const check = await userAuth.methods.getBalance(this.state.address).call({\n        from: this.state.address\n      });\n      console.log(\"Balance : \" + check);\n    };\n\n    this.userRegistration = async event => {\n      event.preventDefault();\n\n      try {\n        const web3 = window.web3;\n        const webeProvider = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n        const accounts = await webeProvider.eth.getAccounts();\n        this.setState({\n          address: accounts[0]\n        });\n        console.log(\"Account: \" + this.state.address);\n        const netId = await web3.eth.net.getId();\n        const deployedNetwork = contract.networks[netId];\n        console.log(\"Deployed Address :\", deployedNetwork.address);\n        console.log(this.state.name);\n        console.log(this.state.address);\n        console.log(this.state.password);\n        console.log(this.state.balance);\n        console.log(this.state.cnic);\n        const userAuth = new web3.eth.Contract(contract.abi, deployedNetwork.address); // check transaction fee \n\n        console.log(\"Transaction fee: \" + txFee);\n        await userAuth.methods.register(this.state.address, this.state.name, this.state.password, this.state.balance, this.state.cnic).send({\n          from: this.state.address\n        }); // await userAuth.methods\n        //   .updateUserBalance(this.state.address, this.state.balance)\n        //   .send({ from: this.state.address });\n      } catch (e) {\n        console.log(\"User Already registered with this account no\");\n      }\n    };\n\n    this.userLogin = async event => {\n      event.preventDefault();\n      const web3 = window.web3;\n      const webeProvider = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n      const accounts = await webeProvider.eth.getAccounts();\n      this.setState({\n        address: accounts[0]\n      });\n      console.log(\"Account: \" + this.state.address);\n      const netId = await web3.eth.net.getId();\n      const deployedNetwork = contract.networks[netId];\n      console.log(\"Deployed Address :\", deployedNetwork.address);\n      console.log(this.state.password);\n      console.log(this.state.address);\n      const userAuth = new web3.eth.Contract(contract.abi, deployedNetwork.address);\n      const check = await userAuth.methods.login(this.state.address, this.state.password).send({\n        from: this.state.address\n      });\n      console.log(\"Check : \" + check);\n      const checkIsUser = await userAuth.methods.checkIsUserLogged(this.state.address).call({\n        from: this.state.address\n      });\n      console.log(\"checkIsUser : \" + checkIsUser);\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      name: \"\",\n      password: \"\",\n      address: \"\",\n      cnic: \"\",\n      balance: \"\"\n    };\n  }\n\n  async loadBlockchainData() {\n    console.log(\"loadBlockchainData\");\n    const web3 = window.web3;\n    const webeProvider = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n    const accounts = await webeProvider.eth.getAccounts();\n    this.setState({\n      address: accounts[0]\n    });\n    const blnce = web3.utils.fromWei(await web3.eth.getBalance(accounts[0]), \"ether\");\n    this.setState({\n      balance: blnce\n    });\n    console.log(this.state.balance);\n    console.log(this.state.address);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"footer-input\",\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"Name\",\n          value: this.state.name,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"footer-input\",\n          name: \"cnic\",\n          type: \"number\",\n          placeholder: \"CNIC\",\n          value: this.state.cnic,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"footer-input\",\n          name: \"password\",\n          type: \"text\",\n          placeholder: \"Password\",\n          value: this.state.password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.userRegistration,\n          children: \"Register User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn--primary\",\n          color: \"primary\",\n          onClick: this.checkIsUserLogged,\n          children: \"Check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn--primary\",\n          color: \"primary\",\n          onClick: this.logoutSubmit,\n          children: \"logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn--primary\",\n          color: \"primary\",\n          onClick: this.checkBalance,\n          children: \"Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/zaryab/VSCodeProjects/dapp-authentication/src/App.js"],"names":["React","Component","Button","Web3","contract","App","componentWillMount","console","log","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","location","href","constructor","props","logoutSubmit","event","preventDefault","webeProvider","givenProvider","accounts","eth","getAccounts","setState","address","state","netId","net","getId","deployedNetwork","networks","userAuth","Contract","abi","methods","logout","send","from","checkIsUserLogged","checkIsUser","call","checkBalance","check","getBalance","userRegistration","name","password","balance","cnic","txFee","register","e","userLogin","login","handleChange","bind","blnce","utils","fromWei","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Button } from \"./Button\";\nimport Web3 from \"web3\";\nimport contract from \"./build/contracts/Auth.json\";\nclass App extends Component {\n  async componentWillMount() {\n    console.log(\"componentWillMount\");\n    await this.loadWeb3();\n    this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    console.log(\"loadWeb3\");\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n      window.location.href =\n        \"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn\";\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      name: \"\",\n      password: \"\",\n      address: \"\",\n      cnic: \"\",\n      balance: \"\",\n    };\n  }\n\n  async loadBlockchainData() {\n    console.log(\"loadBlockchainData\");\n    const web3 = window.web3;\n    const webeProvider = new Web3(\n      Web3.givenProvider || \"http://localhost:7545\"\n    );\n    const accounts = await webeProvider.eth.getAccounts();\n\n    this.setState({ address: accounts[0] });\n\n    const blnce = web3.utils.fromWei(\n      await web3.eth.getBalance(accounts[0]),\n      \"ether\"\n    );\n\n    \n\n    this.setState({ balance: blnce });\n\n    console.log(this.state.balance);\n    console.log(this.state.address);\n  }\n\n  logoutSubmit = async (event) => {\n    event.preventDefault();\n    const web3 = window.web3;\n    const webeProvider = new Web3(\n      Web3.givenProvider || \"http://localhost:7545\"\n    );\n    const accounts = await webeProvider.eth.getAccounts();\n\n    this.setState({ address: accounts[0] });\n    console.log(\"Account: \" + this.state.address);\n\n    const netId = await web3.eth.net.getId();\n    const deployedNetwork = contract.networks[netId];\n\n    const userAuth = new web3.eth.Contract(\n      contract.abi,\n      deployedNetwork.address\n    );\n\n    await userAuth.methods\n      .logout(this.state.address)\n      .send({ from: this.state.address });\n  };\n\n  checkIsUserLogged = async (event) => {\n    event.preventDefault();\n    const web3 = window.web3;\n    const webeProvider = new Web3(\n      Web3.givenProvider || \"http://localhost:7545\"\n    );\n    const accounts = await webeProvider.eth.getAccounts();\n\n    this.setState({ address: accounts[0] });\n    console.log(\"Account: \" + this.state.address);\n\n    const netId = await web3.eth.net.getId();\n    const deployedNetwork = contract.networks[netId];\n\n    const userAuth = new web3.eth.Contract(\n      contract.abi,\n      deployedNetwork.address\n    );\n\n    const checkIsUser = await userAuth.methods\n      .checkIsUserLogged(this.state.address)\n      .call({ from: this.state.address });\n\n    console.log(\"checkIsUser : \" + checkIsUser);\n  };\n\n\n  checkBalance = async (event) => {\n    event.preventDefault();\n\n    const web3 = window.web3;\n\n    const webeProvider = new Web3(\n      Web3.givenProvider || \"http://localhost:7545\"\n    );\n    const accounts = await webeProvider.eth.getAccounts();\n    this.setState({ address: accounts[0] });\n    console.log(\"Account: \" + this.state.address);\n\n    const netId = await web3.eth.net.getId();\n    const deployedNetwork = contract.networks[netId];\n\n    console.log(\"Deployed Address :\", deployedNetwork.address);\n    const userAuth = new web3.eth.Contract(\n      contract.abi,\n      deployedNetwork.address\n    );\n\n\n    const check = await userAuth.methods\n      .getBalance(this.state.address)\n      .call({ from: this.state.address });\n\n    console.log(\"Balance : \" + check);\n\n\n\n  }\n\n\n  userRegistration = async (event) => {\n    event.preventDefault();\n\n    try {\n      const web3 = window.web3;\n\n      const webeProvider = new Web3(\n        Web3.givenProvider || \"http://localhost:7545\"\n      );\n      const accounts = await webeProvider.eth.getAccounts();\n      this.setState({ address: accounts[0] });\n      console.log(\"Account: \" + this.state.address);\n\n      const netId = await web3.eth.net.getId();\n      const deployedNetwork = contract.networks[netId];\n\n      console.log(\"Deployed Address :\", deployedNetwork.address);\n\n      console.log(this.state.name);\n      console.log(this.state.address);\n      console.log(this.state.password);\n      console.log(this.state.balance);\n      console.log(this.state.cnic);\n\n      const userAuth = new web3.eth.Contract(\n        contract.abi,\n        deployedNetwork.address\n      );\n\n    // check transaction fee \n    \n    console.log(\"Transaction fee: \" + txFee);\n\n      await userAuth.methods\n        .register(\n          this.state.address,\n          this.state.name,\n          this.state.password,\n          this.state.balance,\n          this.state.cnic\n        )\n        .send({ from: this.state.address });\n\n    \n\n      // await userAuth.methods\n      //   .updateUserBalance(this.state.address, this.state.balance)\n      //   .send({ from: this.state.address });\n    } catch (e) {\n      console.log(\"User Already registered with this account no\");\n    }\n  };\n\n  userLogin = async (event) => {\n    event.preventDefault();\n\n    const web3 = window.web3;\n\n    const webeProvider = new Web3(\n      Web3.givenProvider || \"http://localhost:7545\"\n    );\n    const accounts = await webeProvider.eth.getAccounts();\n    this.setState({ address: accounts[0] });\n    console.log(\"Account: \" + this.state.address);\n\n    const netId = await web3.eth.net.getId();\n    const deployedNetwork = contract.networks[netId];\n\n    console.log(\"Deployed Address :\", deployedNetwork.address);\n\n    console.log(this.state.password);\n    console.log(this.state.address);\n\n    const userAuth = new web3.eth.Contract(\n      contract.abi,\n      deployedNetwork.address\n    );\n\n    const check = await userAuth.methods\n      .login(this.state.address, this.state.password)\n      .send({ from: this.state.address });\n\n    console.log(\"Check : \" + check);\n\n    const checkIsUser = await userAuth.methods\n      .checkIsUserLogged(this.state.address)\n      .call({ from: this.state.address });\n\n    console.log(\"checkIsUser : \" + checkIsUser);\n  };\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form>\n          <input\n            className=\"footer-input\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n          <input\n            className=\"footer-input\"\n            name=\"cnic\"\n            type=\"number\"\n            placeholder=\"CNIC\"\n            value={this.state.cnic}\n            onChange={this.handleChange}\n          />\n          <input\n            className=\"footer-input\"\n            name=\"password\"\n            type=\"text\"\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <Button onClick={this.userRegistration}>Register User</Button>\n        </form>\n\n        <div>\n          {/* <form>\n            <input\n              className=\"footer-input\"\n              name=\"password\"\n              type=\"text\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n            <Button\n              className=\"btn--primary\"\n              color=\"primary\"\n              onClick={this.userLogin}\n            >\n              Login User\n            </Button>\n          </form> */}\n\n          <Button\n            className=\"btn--primary\"\n            color=\"primary\"\n            onClick={this.checkIsUserLogged}\n          >\n            Check\n          </Button>\n\n          <Button\n            className=\"btn--primary\"\n            color=\"primary\"\n            onClick={this.logoutSubmit}\n          >\n            logout\n          </Button>\n\n          <Button\n            className=\"btn--primary\"\n            color=\"primary\"\n            onClick={this.checkBalance}\n          >\n            Balance\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}