{"ast":null,"code":"var _jsxFileName = \"/home/zaryab/VSCodeProjects/dapp-authentication/src/App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Button } from \"./Button\";\nimport Web3 from \"web3\";\nimport contract from \"./build/contracts/Auth.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  async componentWillMount() {\n    console.log(\"componentWillMount\");\n    await this.loadWeb3();\n    this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    console.log(\"loadWeb3\");\n\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n      window.location.href = \"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn\";\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      console.log(\"loadBlockchainData\");\n      const web3 = window.web3;\n      const webeProvider = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n      const accounts = await webeProvider.eth.getAccounts();\n      this.setState({\n        address: accounts[0]\n      });\n      const netId = await web3.eth.net.getId();\n      const deployedNetwork = contract.networks[netId];\n      const userAuth = new web3.eth.Contract(contract.abi, deployedNetwork.address);\n      const checkIsUser = await userAuth.methods.checkIsUserLogged(this.state.address).call({\n        from: this.state.address\n      });\n      console.log(\"checkIsUser : \" + checkIsUser);\n    };\n\n    this.userRegistration = async event => {\n      event.preventDefault();\n      const web3 = window.web3;\n      const webeProvider = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n      const accounts = await webeProvider.eth.getAccounts();\n      this.setState({\n        address: accounts[0]\n      });\n      console.log(\"Account: \" + this.state.address);\n      const netId = await web3.eth.net.getId();\n      const deployedNetwork = contract.networks[netId];\n      console.log(\"Deployed Address :\", deployedNetwork.address);\n      console.log(this.state.name);\n      console.log(this.state.address);\n      console.log(this.state.password);\n      console.log(this.state.balance);\n      console.log(this.state.cnic);\n      const userAuth = new web3.eth.Contract(contract.abi, deployedNetwork.address);\n      await userAuth.methods.register(this.state.address, this.state.name, this.state.password, this.state.balance, this.state.cnic).send({\n        from: this.state.address\n      });\n    };\n\n    this.userLogin = async event => {\n      event.preventDefault();\n      const web3 = window.web3;\n      const webeProvider = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n      const accounts = await webeProvider.eth.getAccounts();\n      this.setState({\n        address: accounts[0]\n      });\n      console.log(\"Account: \" + this.state.address);\n      const netId = await web3.eth.net.getId();\n      const deployedNetwork = contract.networks[netId];\n      console.log(\"Deployed Address :\", deployedNetwork.address);\n      console.log(this.state.password);\n      console.log(this.state.address);\n      const userAuth = new web3.eth.Contract(contract.abi, deployedNetwork.address);\n      const check = await userAuth.methods.login(this.state.address, this.state.password).call({\n        from: this.state.address\n      });\n      console.log(\"Check : \" + check);\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      name: \"\",\n      password: \"\",\n      address: \"\",\n      cnic: \"\",\n      balance: \"\"\n    };\n  }\n\n  async loadBlockchainData() {\n    console.log(\"loadBlockchainData\");\n    const web3 = window.web3;\n    const webeProvider = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n    const accounts = await webeProvider.eth.getAccounts();\n    this.setState({\n      address: accounts[0]\n    });\n    const blnce = web3.utils.fromWei(await web3.eth.getBalance(accounts[0]), \"ether\");\n    this.setState({\n      balance: blnce\n    });\n    console.log(this.state.balance);\n    console.log(this.state.address);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn--primary\",\n          color: \"primary\",\n          onClick: this.userLogin,\n          children: \"Login User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/zaryab/VSCodeProjects/dapp-authentication/src/App.js"],"names":["React","Component","Button","Web3","contract","App","componentWillMount","console","log","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","location","href","constructor","props","handleSubmit","event","preventDefault","webeProvider","givenProvider","accounts","eth","getAccounts","setState","address","netId","net","getId","deployedNetwork","networks","userAuth","Contract","abi","checkIsUser","methods","checkIsUserLogged","state","call","from","userRegistration","name","password","balance","cnic","register","send","userLogin","check","login","handleChange","bind","blnce","utils","fromWei","getBalance","e","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Button } from \"./Button\";\nimport Web3 from \"web3\";\nimport contract from \"./build/contracts/Auth.json\";\nclass App extends Component {\n  async componentWillMount() {\n    console.log(\"componentWillMount\");\n    await this.loadWeb3();\n    this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    console.log(\"loadWeb3\");\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n      window.location.href =\n        \"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn\";\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      name: \"\",\n      password: \"\",\n      address: \"\",\n      cnic: \"\",\n      balance: \"\",\n    };\n  }\n\n  async loadBlockchainData() {\n    console.log(\"loadBlockchainData\");\n    const web3 = window.web3;\n    const webeProvider = new Web3(\n      Web3.givenProvider || \"http://localhost:7545\"\n    );\n    const accounts = await webeProvider.eth.getAccounts();\n\n    this.setState({ address: accounts[0] });\n\n    const blnce = web3.utils.fromWei(\n      await web3.eth.getBalance(accounts[0]),\n      \"ether\"\n    );\n\n    this.setState({ balance: blnce });\n\n    console.log(this.state.balance);\n    console.log(this.state.address);\n\n\n\n\n\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault()\n\n\n    console.log(\"loadBlockchainData\");\n    const web3 = window.web3;\n    const webeProvider = new Web3(\n      Web3.givenProvider || \"http://localhost:7545\"\n    );\n    const accounts = await webeProvider.eth.getAccounts();\n\n    this.setState({ address: accounts[0] });\n\n    const netId = await web3.eth.net.getId();\n    const deployedNetwork = contract.networks[netId];\n\n    const userAuth = new web3.eth.Contract(\n      contract.abi,\n      deployedNetwork.address\n    );\n\n    const checkIsUser = await userAuth.methods\n    .checkIsUserLogged(this.state.address)\n    .call({ from: this.state.address });\n\n    console.log(\"checkIsUser : \" + checkIsUser);\n    \n  };\n\n  userRegistration = async (event) => {\n    event.preventDefault();\n\n    const web3 = window.web3;\n\n    const webeProvider = new Web3(\n      Web3.givenProvider || \"http://localhost:7545\"\n    );\n    const accounts = await webeProvider.eth.getAccounts();\n    this.setState({ address: accounts[0] });\n    console.log(\"Account: \" + this.state.address);\n\n    const netId = await web3.eth.net.getId();\n    const deployedNetwork = contract.networks[netId];\n\n    console.log(\"Deployed Address :\", deployedNetwork.address);\n\n    console.log(this.state.name);\n    console.log(this.state.address);\n    console.log(this.state.password);\n    console.log(this.state.balance);\n    console.log(this.state.cnic);\n\n    const userAuth = new web3.eth.Contract(\n      contract.abi,\n      deployedNetwork.address\n    );\n\n    await userAuth.methods\n      .register(\n        this.state.address,\n        this.state.name,\n        this.state.password,\n        this.state.balance,\n        this.state.cnic\n      )\n      .send({ from: this.state.address });\n  };\n\n  userLogin = async (event) => {\n    event.preventDefault();\n\n    const web3 = window.web3;\n\n    const webeProvider = new Web3(\n      Web3.givenProvider || \"http://localhost:7545\"\n    );\n    const accounts = await webeProvider.eth.getAccounts();\n    this.setState({ address: accounts[0] });\n    console.log(\"Account: \" + this.state.address);\n\n    const netId = await web3.eth.net.getId();\n    const deployedNetwork = contract.networks[netId];\n\n    console.log(\"Deployed Address :\", deployedNetwork.address);\n\n    console.log(this.state.password);\n    console.log(this.state.address);\n\n    const userAuth = new web3.eth.Contract(\n      contract.abi,\n      deployedNetwork.address\n    );\n\n    const check = await userAuth.methods\n      .login(this.state.address, this.state.password)\n      .call({ from: this.state.address });\n\n    \n      \n        console.log(\"Check : \" + check);\n      \n  };\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {/* <form>\n          <input\n            className=\"footer-input\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n          <input\n            className=\"footer-input\"\n            name=\"cnic\"\n            type=\"number\"\n            placeholder=\"CNIC\"\n            value={this.state.cnic}\n            onChange={this.handleChange}\n          />\n          <input\n            className=\"footer-input\"\n            name=\"password\"\n            type=\"text\"\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <Button onClick={this.userRegistration}>Register User</Button>\n        </form> */}\n\n        <div>\n          {/* <form>\n          \n            <input\n              className=\"footer-input\"\n              name=\"password\"\n              type=\"text\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            /> */}\n            <Button\n              className=\"btn--primary\"\n              color=\"primary\"\n              onClick={this.userLogin}\n            >\n              Login User\n            </Button>\n          {/* </form> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}