{"ast":null,"code":"var _jsxFileName = \"/home/zaryab/VSCodeProjects/dapp-authentication/src/App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Button } from \"./Button\";\nimport Web3 from \"web3\";\nimport contract from \"./build/contracts/Auth.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  async componentWillMount() {\n    console.log(\"componentWillMount\");\n    await this.loadWeb3();\n    this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    console.log(\"loadWeb3\");\n\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n      window.location.href = \"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn\";\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(event.target.firstName.value); //get value from input with name of firstName\n    };\n\n    this.userRegistration = async event => {\n      event.preventDefault();\n      const web3 = window.web3;\n      const webeProvider = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n      const accounts = await webeProvider.eth.getAccounts();\n      this.setState({\n        address: accounts[0]\n      });\n      console.log(\"Account: \" + this.state.address);\n      const netId = await web3.eth.net.getId();\n      const deployedNetwork = contract.networks[netId];\n      console.log(\"Deployed Address :\", deployedNetwork.address);\n      console.log(this.state.name);\n      console.log(this.state.address);\n      console.log(this.state.password);\n      console.log(this.state.balance);\n      console.log(this.state.cnic);\n      const userAuth = new web3.eth.Contract(contract.abi, deployedNetwork.address);\n      await userAuth.methods.register(this.state.address, this.state.name, this.state.password, this.state.balance, this.state.cnic).send({\n        from: this.state.address\n      });\n    };\n\n    this.userLogin = async event => {\n      event.preventDefault();\n      const web3 = window.web3;\n      const webeProvider = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n      const accounts = await webeProvider.eth.getAccounts();\n      this.setState({\n        address: accounts[0]\n      });\n      console.log(\"Account: \" + this.state.address);\n      const netId = await web3.eth.net.getId();\n      const deployedNetwork = contract.networks[netId];\n      console.log(\"Deployed Address :\", deployedNetwork.address);\n      console.log(this.state.password);\n      console.log(this.state.address);\n      const userAuth = new web3.eth.Contract(contract.abi, deployedNetwork.address);\n      const check = await userAuth.methods.login(this.state.address, this.state.password).call({\n        from: this.state.address\n      });\n      console.log(\"Check : \" + check);\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      name: \"\",\n      password: \"\",\n      address: \"\",\n      cnic: \"\",\n      balance: \"\"\n    };\n  }\n\n  async loadBlockchainData() {\n    console.log(\"loadBlockchainData\");\n    const web3 = window.web3;\n    const webeProvider = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n    const accounts = await webeProvider.eth.getAccounts();\n    this.setState({\n      address: accounts[0]\n    });\n    const blnce = web3.utils.fromWei(await web3.eth.getBalance(accounts[0]), \"ether\");\n    this.setState({\n      balance: blnce\n    });\n    console.log(this.state.balance);\n    console.log(this.state.address);\n    const netId = await web3.eth.net.getId();\n    const deployedNetwork = contract.networks[netId];\n    const userAuth = new web3.eth.Contract(contract.abi, deployedNetwork.address);\n    const checkIsUser = await userAuth.methods.checkIsUserLogged(this.state.address).call({\n      from: this.state.address\n    });\n    console.log(\"checkIsUser : \" + checkIsUser);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"footer-input\",\n            name: \"password\",\n            type: \"text\",\n            placeholder: \"Password\",\n            value: this.state.password,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn--primary\",\n            color: \"primary\",\n            onClick: this.userLogin,\n            children: \"Login User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/zaryab/VSCodeProjects/dapp-authentication/src/App.js"],"names":["React","Component","Button","Web3","contract","App","componentWillMount","console","log","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","location","href","constructor","props","handleSubmit","event","preventDefault","target","firstName","value","userRegistration","webeProvider","givenProvider","accounts","eth","getAccounts","setState","address","state","netId","net","getId","deployedNetwork","networks","name","password","balance","cnic","userAuth","Contract","abi","methods","register","send","from","userLogin","check","login","call","handleChange","bind","blnce","utils","fromWei","getBalance","checkIsUser","checkIsUserLogged","e","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,MAAqB,6BAArB;;;AACA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACF,QAAlBK,kBAAkB,GAAG;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,UAAM,KAAKC,QAAL,EAAN;AACA,SAAKC,kBAAL;AACD;;AAEa,QAARD,QAAQ,GAAG;AACfF,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,QAAIG,MAAM,CAACC,QAAX,EAAqB;AACnBD,MAAAA,MAAM,CAACE,IAAP,GAAc,IAAIV,IAAJ,CAASQ,MAAM,CAACC,QAAhB,CAAd;AACA,YAAMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAAN;AACD,KAHD,MAGO,IAAIH,MAAM,CAACE,IAAX,EAAiB;AACtBF,MAAAA,MAAM,CAACE,IAAP,GAAc,IAAIV,IAAJ,CAASQ,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,KAFM,MAEA;AACLJ,MAAAA,MAAM,CAACK,KAAP,CACE,qEADF;AAGAL,MAAAA,MAAM,CAACM,QAAP,CAAgBC,IAAhB,GACE,qFADF;AAED;AACF;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkDnBC,YAlDmB,GAkDJC,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAYc,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBC,KAAnC,EAFsB,CAEqB;AAC5C,KArDkB;;AAAA,SAuDnBC,gBAvDmB,GAuDA,MAAOL,KAAP,IAAiB;AAClCA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAMV,IAAI,GAAGF,MAAM,CAACE,IAApB;AAEA,YAAMe,YAAY,GAAG,IAAIzB,IAAJ,CACnBA,IAAI,CAAC0B,aAAL,IAAsB,uBADH,CAArB;AAGA,YAAMC,QAAQ,GAAG,MAAMF,YAAY,CAACG,GAAb,CAAiBC,WAAjB,EAAvB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEJ,QAAQ,CAAC,CAAD;AAAnB,OAAd;AACAvB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAc,KAAK2B,KAAL,CAAWD,OAArC;AAEA,YAAME,KAAK,GAAG,MAAMvB,IAAI,CAACkB,GAAL,CAASM,GAAT,CAAaC,KAAb,EAApB;AACA,YAAMC,eAAe,GAAGnC,QAAQ,CAACoC,QAAT,CAAkBJ,KAAlB,CAAxB;AAEA7B,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC+B,eAAe,CAACL,OAAlD;AAEA3B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK2B,KAAL,CAAWM,IAAvB;AACAlC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK2B,KAAL,CAAWD,OAAvB;AACA3B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK2B,KAAL,CAAWO,QAAvB;AACAnC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK2B,KAAL,CAAWQ,OAAvB;AACApC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK2B,KAAL,CAAWS,IAAvB;AAEA,YAAMC,QAAQ,GAAG,IAAIhC,IAAI,CAACkB,GAAL,CAASe,QAAb,CACf1C,QAAQ,CAAC2C,GADM,EAEfR,eAAe,CAACL,OAFD,CAAjB;AAKA,YAAMW,QAAQ,CAACG,OAAT,CACHC,QADG,CAEF,KAAKd,KAAL,CAAWD,OAFT,EAGF,KAAKC,KAAL,CAAWM,IAHT,EAIF,KAAKN,KAAL,CAAWO,QAJT,EAKF,KAAKP,KAAL,CAAWQ,OALT,EAMF,KAAKR,KAAL,CAAWS,IANT,EAQHM,IARG,CAQE;AAAEC,QAAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWD;AAAnB,OARF,CAAN;AASD,KA5FkB;;AAAA,SA8FnBkB,SA9FmB,GA8FP,MAAO9B,KAAP,IAAiB;AAC3BA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAMV,IAAI,GAAGF,MAAM,CAACE,IAApB;AAEA,YAAMe,YAAY,GAAG,IAAIzB,IAAJ,CACnBA,IAAI,CAAC0B,aAAL,IAAsB,uBADH,CAArB;AAGA,YAAMC,QAAQ,GAAG,MAAMF,YAAY,CAACG,GAAb,CAAiBC,WAAjB,EAAvB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEJ,QAAQ,CAAC,CAAD;AAAnB,OAAd;AACAvB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAc,KAAK2B,KAAL,CAAWD,OAArC;AAEA,YAAME,KAAK,GAAG,MAAMvB,IAAI,CAACkB,GAAL,CAASM,GAAT,CAAaC,KAAb,EAApB;AACA,YAAMC,eAAe,GAAGnC,QAAQ,CAACoC,QAAT,CAAkBJ,KAAlB,CAAxB;AAEA7B,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC+B,eAAe,CAACL,OAAlD;AAEA3B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK2B,KAAL,CAAWO,QAAvB;AACAnC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK2B,KAAL,CAAWD,OAAvB;AAEA,YAAMW,QAAQ,GAAG,IAAIhC,IAAI,CAACkB,GAAL,CAASe,QAAb,CACf1C,QAAQ,CAAC2C,GADM,EAEfR,eAAe,CAACL,OAFD,CAAjB;AAKA,YAAMmB,KAAK,GAAG,MAAMR,QAAQ,CAACG,OAAT,CACjBM,KADiB,CACX,KAAKnB,KAAL,CAAWD,OADA,EACS,KAAKC,KAAL,CAAWO,QADpB,EAEjBa,IAFiB,CAEZ;AAAEJ,QAAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWD;AAAnB,OAFY,CAApB;AAMI3B,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAa6C,KAAzB;AAEL,KA/HkB;;AAEjB,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKtB,KAAL,GAAa;AACXM,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXR,MAAAA,OAAO,EAAE,EAHE;AAIXU,MAAAA,IAAI,EAAE,EAJK;AAKXD,MAAAA,OAAO,EAAE;AALE,KAAb;AAOD;;AAEuB,QAAlBjC,kBAAkB,GAAG;AACzBH,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,UAAMK,IAAI,GAAGF,MAAM,CAACE,IAApB;AACA,UAAMe,YAAY,GAAG,IAAIzB,IAAJ,CACnBA,IAAI,CAAC0B,aAAL,IAAsB,uBADH,CAArB;AAGA,UAAMC,QAAQ,GAAG,MAAMF,YAAY,CAACG,GAAb,CAAiBC,WAAjB,EAAvB;AAEA,SAAKC,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAEJ,QAAQ,CAAC,CAAD;AAAnB,KAAd;AAEA,UAAM4B,KAAK,GAAG7C,IAAI,CAAC8C,KAAL,CAAWC,OAAX,CACZ,MAAM/C,IAAI,CAACkB,GAAL,CAAS8B,UAAT,CAAoB/B,QAAQ,CAAC,CAAD,CAA5B,CADM,EAEZ,OAFY,CAAd;AAKA,SAAKG,QAAL,CAAc;AAAEU,MAAAA,OAAO,EAAEe;AAAX,KAAd;AAEAnD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK2B,KAAL,CAAWQ,OAAvB;AACApC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK2B,KAAL,CAAWD,OAAvB;AAEA,UAAME,KAAK,GAAG,MAAMvB,IAAI,CAACkB,GAAL,CAASM,GAAT,CAAaC,KAAb,EAApB;AACA,UAAMC,eAAe,GAAGnC,QAAQ,CAACoC,QAAT,CAAkBJ,KAAlB,CAAxB;AAEA,UAAMS,QAAQ,GAAG,IAAIhC,IAAI,CAACkB,GAAL,CAASe,QAAb,CACf1C,QAAQ,CAAC2C,GADM,EAEfR,eAAe,CAACL,OAFD,CAAjB;AAMA,UAAM4B,WAAW,GAAG,MAAMjB,QAAQ,CAACG,OAAT,CACzBe,iBADyB,CACP,KAAK5B,KAAL,CAAWD,OADJ,EAEzBqB,IAFyB,CAEpB;AAAEJ,MAAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWD;AAAnB,KAFoB,CAA1B;AAIA3B,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBsD,WAA/B;AAGD;;AAiFDN,EAAAA,YAAY,CAACQ,CAAD,EAAI;AACd,SAAK/B,QAAL,CAAc;AACZ,OAAC+B,CAAC,CAACxC,MAAF,CAASiB,IAAV,GAAiBuB,CAAC,CAACxC,MAAF,CAASE;AADd,KAAd;AAGD;;AAEDuC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BA6BE;AAAA,+BACE;AAAA,kCAEE;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,WAAW,EAAC,UAJd;AAKE,YAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWO,QALpB;AAME,YAAA,QAAQ,EAAE,KAAKc;AANjB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAUE,QAAC,MAAD;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,OAAO,EAAE,KAAKJ,SAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AA7BF;AAAA;AAAA;AAAA;AAAA,YADF;AAoDD;;AAnNyB;;AAsN5B,eAAe/C,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Button } from \"./Button\";\nimport Web3 from \"web3\";\nimport contract from \"./build/contracts/Auth.json\";\nclass App extends Component {\n  async componentWillMount() {\n    console.log(\"componentWillMount\");\n    await this.loadWeb3();\n    this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    console.log(\"loadWeb3\");\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n      window.location.href =\n        \"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn\";\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      name: \"\",\n      password: \"\",\n      address: \"\",\n      cnic: \"\",\n      balance: \"\",\n    };\n  }\n\n  async loadBlockchainData() {\n    console.log(\"loadBlockchainData\");\n    const web3 = window.web3;\n    const webeProvider = new Web3(\n      Web3.givenProvider || \"http://localhost:7545\"\n    );\n    const accounts = await webeProvider.eth.getAccounts();\n\n    this.setState({ address: accounts[0] });\n\n    const blnce = web3.utils.fromWei(\n      await web3.eth.getBalance(accounts[0]),\n      \"ether\"\n    );\n\n    this.setState({ balance: blnce });\n\n    console.log(this.state.balance);\n    console.log(this.state.address);\n\n    const netId = await web3.eth.net.getId();\n    const deployedNetwork = contract.networks[netId];\n\n    const userAuth = new web3.eth.Contract(\n      contract.abi,\n      deployedNetwork.address\n    );\n\n\n    const checkIsUser = await userAuth.methods\n    .checkIsUserLogged(this.state.address)\n    .call({ from: this.state.address });\n\n    console.log(\"checkIsUser : \" + checkIsUser);\n\n\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    console.log(event.target.firstName.value); //get value from input with name of firstName\n  };\n\n  userRegistration = async (event) => {\n    event.preventDefault();\n\n    const web3 = window.web3;\n\n    const webeProvider = new Web3(\n      Web3.givenProvider || \"http://localhost:7545\"\n    );\n    const accounts = await webeProvider.eth.getAccounts();\n    this.setState({ address: accounts[0] });\n    console.log(\"Account: \" + this.state.address);\n\n    const netId = await web3.eth.net.getId();\n    const deployedNetwork = contract.networks[netId];\n\n    console.log(\"Deployed Address :\", deployedNetwork.address);\n\n    console.log(this.state.name);\n    console.log(this.state.address);\n    console.log(this.state.password);\n    console.log(this.state.balance);\n    console.log(this.state.cnic);\n\n    const userAuth = new web3.eth.Contract(\n      contract.abi,\n      deployedNetwork.address\n    );\n\n    await userAuth.methods\n      .register(\n        this.state.address,\n        this.state.name,\n        this.state.password,\n        this.state.balance,\n        this.state.cnic\n      )\n      .send({ from: this.state.address });\n  };\n\n  userLogin = async (event) => {\n    event.preventDefault();\n\n    const web3 = window.web3;\n\n    const webeProvider = new Web3(\n      Web3.givenProvider || \"http://localhost:7545\"\n    );\n    const accounts = await webeProvider.eth.getAccounts();\n    this.setState({ address: accounts[0] });\n    console.log(\"Account: \" + this.state.address);\n\n    const netId = await web3.eth.net.getId();\n    const deployedNetwork = contract.networks[netId];\n\n    console.log(\"Deployed Address :\", deployedNetwork.address);\n\n    console.log(this.state.password);\n    console.log(this.state.address);\n\n    const userAuth = new web3.eth.Contract(\n      contract.abi,\n      deployedNetwork.address\n    );\n\n    const check = await userAuth.methods\n      .login(this.state.address, this.state.password)\n      .call({ from: this.state.address });\n\n    \n      \n        console.log(\"Check : \" + check);\n      \n  };\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {/* <form>\n          <input\n            className=\"footer-input\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n          <input\n            className=\"footer-input\"\n            name=\"cnic\"\n            type=\"number\"\n            placeholder=\"CNIC\"\n            value={this.state.cnic}\n            onChange={this.handleChange}\n          />\n          <input\n            className=\"footer-input\"\n            name=\"password\"\n            type=\"text\"\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <Button onClick={this.userRegistration}>Register User</Button>\n        </form> */}\n\n        <div>\n          <form>\n          \n            <input\n              className=\"footer-input\"\n              name=\"password\"\n              type=\"text\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n            <Button\n              className=\"btn--primary\"\n              color=\"primary\"\n              onClick={this.userLogin}\n            >\n              Login User\n            </Button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}