{"ast":null,"code":"var _jsxFileName = \"/home/zaryab/VSCodeProjects/dapp-authentication/src/App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Web3 from \"web3\";\nimport contract from \"./build/contracts/Auth.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  async componentWillMount() {\n    console.log(\"componentWillMount\");\n    await this.loadWeb3();\n    this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    console.log(\"loadWeb3\");\n\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n      window.location.href = \"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn\";\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      name: \"\",\n      password: \"\",\n      address: \"\",\n      cnic: \"\",\n      balance: \"\"\n    };\n  }\n\n  async loadBlockchainData() {\n    console.log(\"loadBlockchainData\");\n    const web3 = window.web3;\n    const webeProvider = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n    const accounts = await webeProvider.eth.getAccounts();\n    this.setState({\n      address: accounts[0]\n    });\n    const blnce = web3.utils.fromWei(await web3.eth.getBalance(accounts[0]), \"ether\");\n    this.setState({\n      balance: blnce\n    });\n    console.log(this.state.balance);\n    console.log(this.state.address);\n  }\n\n  async userRegistration() {\n    const web3 = window.web3;\n    const webeProvider = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n    const accounts = await webeProvider.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    console.log(\"Account: \" + this.state.account);\n    const netId = await web3.eth.net.getId();\n    const deployedNetwork = contract.networks[netId];\n    console.log(deployedNetwork.address);\n    const userAuth = new web3.eth.Contract(contract.abi, deployedNetwork.address);\n    const name = this.state.name;\n    const cnic = this.state.cnic;\n    const password = this.state.password;\n    const address = this.state.address;\n    const balance = this.state.balance;\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"footer-input\",\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"Name\",\n        value: this.state.name,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"footer-input\",\n        name: \"cnic\",\n        type: \"number\",\n        placeholder: \"CNIC\",\n        value: this.state.cnic,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"footer-input\",\n        name: \"password\",\n        type: \"text\",\n        placeholder: \"Password\",\n        value: this.state.password,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Register User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/zaryab/VSCodeProjects/dapp-authentication/src/App.js"],"names":["React","Component","Web3","contract","App","componentWillMount","console","log","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","location","href","constructor","props","handleChange","bind","state","name","password","address","cnic","balance","webeProvider","givenProvider","accounts","eth","getAccounts","setState","blnce","utils","fromWei","getBalance","userRegistration","account","netId","net","getId","deployedNetwork","networks","userAuth","Contract","abi","e","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Web3 from \"web3\";\nimport contract from \"./build/contracts/Auth.json\";\nclass App extends Component {\n  async componentWillMount() {\n    console.log(\"componentWillMount\");\n    await this.loadWeb3();\n    this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    console.log(\"loadWeb3\");\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n      window.location.href =\n        \"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn\";\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      name: \"\",\n      password: \"\",\n      address:  \"\",\n      cnic: \"\",\n      balance: \"\",\n    }\n  }\n\n  async loadBlockchainData() {\n    console.log(\"loadBlockchainData\");\n    const web3 = window.web3;\n    const webeProvider = new Web3(\n      Web3.givenProvider || \"http://localhost:7545\"\n    );\n    const accounts = await webeProvider.eth.getAccounts();\n\n    this.setState({address: accounts[0]});\n\n    const blnce = web3.utils.fromWei(\n      await web3.eth.getBalance(accounts[0]),\n      \"ether\"\n    );\n\n    this.setState({balance : blnce});\n\n    console.log(this.state.balance);\n    console.log(this.state.address);\n\n  }\n\n  async userRegistration() {\n    const web3 = window.web3;\n\n      const webeProvider = new Web3(\n        Web3.givenProvider || \"http://localhost:7545\"\n      );\n      const accounts = await webeProvider.eth.getAccounts();\n      this.setState({ account: accounts[0] });\n      console.log(\"Account: \" + this.state.account);\n\n      const netId = await web3.eth.net.getId();\n      const deployedNetwork = contract.networks[netId];\n\n      console.log(deployedNetwork.address);\n\n      const userAuth = new web3.eth.Contract(\n        contract.abi,\n        deployedNetwork.address\n      );\n\n    \n      \n    const name = this.state.name;\n    const cnic = this.state.cnic;\n    const password = this.state.password;\n    const address = this.state.address;\n    const balance = this.state.balance;\n\n    \n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n\n  render() {\n    return (\n\n            <form>\n              <input\n                className=\"footer-input\"\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Name\"\n                value={this.state.name}\n                onChange={this.handleChange}\n              />\n              <input\n                className=\"footer-input\"\n                name=\"cnic\"\n                type=\"number\"\n                placeholder=\"CNIC\"\n                value={this.state.cnic}\n                onChange={this.handleChange}\n              />\n              <input\n                className=\"footer-input\"\n                name=\"password\"\n                type=\"text\"\n                placeholder=\"Password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n              <button>Register User</button>\n            </form>\n      \n   \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}